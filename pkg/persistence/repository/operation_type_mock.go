// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/persistence/repository/operation_type.go

// Package repository is a generated GoMock package.
package repository

import (
	entity "ms/card/pkg/persistence/entity"
	filter "ms/card/pkg/persistence/filter"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
)

// MockOperationTypes is a mock of OperationTypes interface.
type MockOperationTypes struct {
	ctrl     *gomock.Controller
	recorder *MockOperationTypesMockRecorder
}

// MockOperationTypesMockRecorder is the mock recorder for MockOperationTypes.
type MockOperationTypesMockRecorder struct {
	mock *MockOperationTypes
}

// NewMockOperationTypes creates a new mock instance.
func NewMockOperationTypes(ctrl *gomock.Controller) *MockOperationTypes {
	mock := &MockOperationTypes{ctrl: ctrl}
	mock.recorder = &MockOperationTypesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperationTypes) EXPECT() *MockOperationTypesMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockOperationTypes) Create(ctx context.Context, structure entity.OperationType) (*entity.OperationType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, structure)
	ret0, _ := ret[0].(*entity.OperationType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockOperationTypesMockRecorder) Create(ctx, structure interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockOperationTypes)(nil).Create), ctx, structure)
}

// FindAll mocks base method.
func (m *MockOperationTypes) FindAll(ctx context.Context, filters filter.OperationTypeCollection) ([]*entity.OperationType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", ctx, filters)
	ret0, _ := ret[0].([]*entity.OperationType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll.
func (mr *MockOperationTypesMockRecorder) FindAll(ctx, filters interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockOperationTypes)(nil).FindAll), ctx, filters)
}

// FindByID mocks base method.
func (m *MockOperationTypes) FindByID(ctx context.Context, id uint) (*entity.OperationType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", ctx, id)
	ret0, _ := ret[0].(*entity.OperationType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID.
func (mr *MockOperationTypesMockRecorder) FindByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockOperationTypes)(nil).FindByID), ctx, id)
}
